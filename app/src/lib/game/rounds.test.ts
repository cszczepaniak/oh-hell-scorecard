import { getNumberOfCards, getNumberOfRounds } from './rounds';

const allCombinationsOfPlayersRoundsAndExpectedCards = [
    [3, 1, 1],
    [3, 2, 2],
    [3, 3, 3],
    [3, 4, 4],
    [3, 5, 5],
    [3, 6, 6],
    [3, 7, 7],
    [3, 8, 8],
    [3, 9, 9],
    [3, 10, 10],
    [3, 11, 11],
    [3, 12, 12],
    [3, 13, 13],
    [3, 14, 14],
    [3, 15, 15],
    [3, 16, 16],
    [3, 17, 17],
    [3, 18, 17],
    [3, 19, 16],
    [3, 20, 15],
    [3, 21, 14],
    [3, 22, 13],
    [3, 23, 12],
    [3, 24, 11],
    [3, 25, 10],
    [3, 26, 9],
    [3, 27, 8],
    [3, 28, 7],
    [3, 29, 6],
    [3, 30, 5],
    [3, 31, 4],
    [3, 32, 3],
    [3, 33, 2],
    [3, 34, 1],
    [4, 1, 1],
    [4, 2, 2],
    [4, 3, 3],
    [4, 4, 4],
    [4, 5, 5],
    [4, 6, 6],
    [4, 7, 7],
    [4, 8, 8],
    [4, 9, 9],
    [4, 10, 10],
    [4, 11, 11],
    [4, 12, 12],
    [4, 13, 13],
    [4, 14, 12],
    [4, 15, 11],
    [4, 16, 10],
    [4, 17, 9],
    [4, 18, 8],
    [4, 19, 7],
    [4, 20, 6],
    [4, 21, 5],
    [4, 22, 4],
    [4, 23, 3],
    [4, 24, 2],
    [4, 25, 1],
    [5, 1, 1],
    [5, 2, 2],
    [5, 3, 3],
    [5, 4, 4],
    [5, 5, 5],
    [5, 6, 6],
    [5, 7, 7],
    [5, 8, 8],
    [5, 9, 9],
    [5, 10, 10],
    [5, 11, 10],
    [5, 12, 9],
    [5, 13, 8],
    [5, 14, 7],
    [5, 15, 6],
    [5, 16, 5],
    [5, 17, 4],
    [5, 18, 3],
    [5, 19, 2],
    [5, 20, 1],
    [6, 1, 1],
    [6, 2, 2],
    [6, 3, 3],
    [6, 4, 4],
    [6, 5, 5],
    [6, 6, 6],
    [6, 7, 7],
    [6, 8, 8],
    [6, 9, 8],
    [6, 10, 7],
    [6, 11, 6],
    [6, 12, 5],
    [6, 13, 4],
    [6, 14, 3],
    [6, 15, 2],
    [6, 16, 1],
    [7, 1, 1],
    [7, 2, 2],
    [7, 3, 3],
    [7, 4, 4],
    [7, 5, 5],
    [7, 6, 6],
    [7, 7, 7],
    [7, 8, 7],
    [7, 9, 6],
    [7, 10, 5],
    [7, 11, 4],
    [7, 12, 3],
    [7, 13, 2],
    [7, 14, 1],
    [8, 1, 1],
    [8, 2, 2],
    [8, 3, 3],
    [8, 4, 4],
    [8, 5, 5],
    [8, 6, 6],
    [8, 7, 6],
    [8, 8, 5],
    [8, 9, 4],
    [8, 10, 3],
    [8, 11, 2],
    [8, 12, 1],
    [9, 1, 1],
    [9, 2, 2],
    [9, 3, 3],
    [9, 4, 4],
    [9, 5, 5],
    [9, 6, 5],
    [9, 7, 4],
    [9, 8, 3],
    [9, 9, 2],
    [9, 10, 1],
    [10, 1, 1],
    [10, 2, 2],
    [10, 3, 3],
    [10, 4, 4],
    [10, 5, 5],
    [10, 6, 5],
    [10, 7, 4],
    [10, 8, 3],
    [10, 9, 2],
    [10, 10, 1],
];

describe('rounds', () => {
    test.each([
        [3, 34],
        [4, 25],
        [5, 20],
        [6, 16],
        [7, 14],
        [8, 12],
        [9, 10],
        [10, 10],
    ])('for %s players, the number of rounds should be %s', (nPlayers, expNRounds) => {
        const nRounds = getNumberOfRounds(nPlayers);
        expect(nRounds).toEqual(expNRounds);
    });
    test.each(allCombinationsOfPlayersRoundsAndExpectedCards)(
        'for %s players in round %s, nCards should be %s',
        (nPlayers, round, expNCards) => {
            const nCards = getNumberOfCards(nPlayers, round);
            expect(nCards).toEqual(expNCards);
        },
    );
});
